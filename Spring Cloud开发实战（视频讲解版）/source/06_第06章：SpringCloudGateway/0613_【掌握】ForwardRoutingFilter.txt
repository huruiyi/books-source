1、
package com.yootk.gateway.action;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.server.ServerWebExchange;

import java.util.HashMap;
import java.util.Map;

@RestController
@RequestMapping("/gateway/action/*") // 定义访问父路径
public class GatewayAction { // 网关Action
    @RequestMapping("globalforward") // 定义子路径
    public Map<String, String> forward(ServerWebExchange exchange) {
        Map<String, String> result = new HashMap<>(); // 保存所有的处理结果
        result.put("message", "forward"); // 信息保存
        result.put("requestId", exchange.getRequest().getId());
        result.put("requestPath", exchange.getRequest().getPath().toString());
        return result;
    }
}


2、
spring:
  application:
    name: microcloud.gateway # 网关名称
  cloud: # Cloud配置
    nacos: # Nacos注册中心配置
      discovery: # 发现服务
        server-addr: nacos-server:8848 # Nacos服务地址
        namespace: 96c23d77-8d08-4648-b750-1217845607ee # 命名空间ID
        group: MICROCLOUD_GROUP # 一般建议大写
        cluster-name: MuyanGateway # 配置集群名称
        username: muyan # 用户名
        password: yootk # 密码
    gateway: # 网关配置
      discovery: # 服务发现
        locator: # 资源定位
          enabled: false # 取消默认路由配置，默认值就是false
      routes: # 定义静态路由
        - id: forward_example # 配置路由ID
          uri: forward://globalforward # 配置本地转发
          predicates:
            - Path=/globalforward # 配置访问路径
          filters:
            - PrefixPath=/gateway/action # 路径前缀
        - id: dept # 路由标记
          uri: lb://dept.provider # 负载均衡调用
          predicates: # 路由谓词工厂
            - Path=/** # 匹配全部的路径
          filters: # 配置过滤器
            - RemoveRequestHeader=Request-Token-Muyan # 删除指定的头信息
            - Log=muyan, yootk # 过滤器=NameValueConfig（name属性, value属性）

3、
gateway-9501:9501/globalfoward

4、


5、


6、


7、


8、


9、

