1、
package com.yootk.test;

import com.netflix.client.config.DefaultClientConfigImpl;
import com.netflix.client.config.IClientConfigKey;
import com.netflix.config.ConfigurationManager;
import com.netflix.config.DeploymentContext;
import com.netflix.loadbalancer.Server;
import com.netflix.loadbalancer.ZoneAffinityServerListFilter;

import java.util.ArrayList;
import java.util.List;

public class TestServerListFilter {
    public static void main(String[] args) throws Exception {
        List<Server> serverList = new ArrayList<>();// 保存服务实例
        serverList.add(createServer("muyan", "muyan.provider-dept", 8001));
        serverList.add(createServer("muyan", "muyan.provider-dept", 8002));
        serverList.add(createServer("yootk", "yootk.provider-dept", 8001));
        // 所有与Ribbon有关的配置项都是通过IClientConfig接口定义的（application.yml）
        DefaultClientConfigImpl clientConfig = new DefaultClientConfigImpl();
        clientConfig.set(IClientConfigKey.Keys.EnableZoneAffinity, true);// 区域相关性
        clientConfig.set(IClientConfigKey.Keys.EnableZoneExclusivity, true);// 区域独占性
        ConfigurationManager.getDeploymentContext().setValue(
                DeploymentContext.ContextKey.zone, "muyan"); // 区域的优先配置
        ZoneAffinityServerListFilter filter = new ZoneAffinityServerListFilter(); // 区域可用性的过滤器
        filter.initWithNiwsConfig(clientConfig); // 初始化配置
        System.out.println(filter.getFilteredListOfServers(serverList)); // 过滤处理
    }
    public static Server createServer(String zone, String url, int index) {
        Server server = new Server(url, index); // 创建实例
        server.setZone(zone); // 设置区域
        return server;
    }
}


2、


3、


4、


5、


6、


7、


8、


9、

