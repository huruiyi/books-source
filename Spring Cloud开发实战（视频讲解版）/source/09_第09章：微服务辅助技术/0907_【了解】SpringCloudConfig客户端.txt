1、
project(":provider-message-8201") {    // 消息微服务
    dependencies {
        implementation("org.springframework.boot:spring-boot-starter-web")
        implementation("org.springframework.cloud:spring-cloud-starter-config")
        implementation(libraries.'spring-boot-admin-starter-client')
        // 以下的依赖库为Nacos注册中心所需要的依赖配置
        implementation('com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery') {
            exclude group: 'com.alibaba.nacos', module: 'nacos-client' // 移除旧版本的Nacos依赖
        }
        implementation('com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config') {
            exclude group: 'com.alibaba.nacos', module: 'nacos-client' // 移除旧版本的Nacos依赖
        }
        implementation(libraries.'nacos-client') // 引入与当前的Nacos匹配的依赖库
    }
}

2、
server: # 服务端配置
  port: 8201 # 8201端口
spring:
  application: # 配置应用信息
    name: message.provider # 是微服务的名称
  cloud: # Cloud配置
    nacos: # Nacos注册中心配置
      discovery: # 发现服务
        weight: 80
        service: ${spring.application.name} # 使用微服务的名称作为注册的服务名称
        server-addr: nacos-server:8848 # Nacos服务地址
        namespace: 96c23d77-8d08-4648-b750-1217845607ee # 命名空间ID
        group: MICROCLOUD_GROUP # 一般建议大写
        cluster-name: MuyanCluster # 配置集群名称
        username: muyan # 用户名
        password: yootk # 密码
        metadata:  # 根据自身的需要配置元数据
          version: 1.0 # 自定义元数据项
          company: 沐言科技 # 自定义元数据项
          url: www.yootk.com # 自定义元数据项
          author: 李兴华（爆可爱的小李老师） # 自定义元数据项


3、
spring: # Spring配置项
  cloud: # SpringCloud配置项
    nacos: # Nacos注册中心的配置
      config: # gRPC通讯配置
        server-addr: nacos-server:8848 # Nacos地址
        namespace: 96c23d77-8d08-4648-b750-1217845607ee # 命名空间ID
        group: MICROCLOUD_GROUP # 一般建议大写
        cluster-name: MuyanCluster # 配置集群名称
        username: muyan # 用户名
        password: yootk # 密码
    config:
      name: ${spring.application.name} # 服务的名称为加载的文件名称
      profile: dev # profile文件名称
      label: master # 分支名称
      discovery:
        service-id: config.server # 通过Nacos访问
        enabled: true # 启用发现服务
  application:
    name: message.provider # 应用名称

4、
package com.yootk.provider.action;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.HashMap;
import java.util.Map;

@RestController
@RequestMapping("/provider/message/*")
public class MessageAction {
    @Value("${yootk.message.flag}") // 配置文件的加载KEY
    private String flag;
    @Value("${yootk.message.content}") // 配置文件的加载KEY
    private String content;
    @RequestMapping("config")
    public Object config() {
        Map<String, Object> result = new HashMap<>();
        result.put("flag", this.flag);
        result.put("content", this.content);
        return result;
    }
}


5、
package com.yootk.provider;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.client.discovery.EnableDiscoveryClient;

@SpringBootApplication
@EnableDiscoveryClient
public class StartMessageApplication {
    public static void main(String[] args) {
        SpringApplication.run(StartMessageApplication.class, args);
    }
}


6、

127.0.0.1	provider-message-8201
7、
spring: # Spring配置项
  cloud: # SpringCloud配置项
    nacos: # Nacos注册中心的配置
      config: # gRPC通讯配置
        server-addr: nacos-server:8848 # Nacos地址
        namespace: 96c23d77-8d08-4648-b750-1217845607ee # 命名空间ID
        group: MICROCLOUD_GROUP # 一般建议大写
        cluster-name: MuyanCluster # 配置集群名称
        username: muyan # 用户名
        password: yootk # 密码
      discovery: # 发现服务
        weight: 80
        service: ${spring.application.name} # 使用微服务的名称作为注册的服务名称
        server-addr: nacos-server:8848 # Nacos服务地址
        namespace: 96c23d77-8d08-4648-b750-1217845607ee # 命名空间ID
        group: MICROCLOUD_GROUP # 一般建议大写
        cluster-name: MuyanCluster # 配置集群名称
        username: muyan # 用户名
        password: yootk # 密码
        metadata: # 根据自身的需要配置元数据
          version: 1.0 # 自定义元数据项
          company: 沐言科技 # 自定义元数据项
          url: www.yootk.com # 自定义元数据项
          author: 李兴华（爆可爱的小李老师） # 自定义元数据项
    config:
      name: ${spring.application.name} # 服务的名称为加载的文件名称
      profile: dev # profile文件名称
      label: master # 分支名称
      discovery:
        enabled: true # 启用发现服务
        service-id: config.server # 通过Nacos访问
  application:
    name: message.provider # 应用名称

8、
provider-message-8201:8201/provider/message/config

9、

